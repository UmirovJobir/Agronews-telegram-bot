from email import message
from telegram import Update, MessageEntity
from telegram.ext import CallbackContext, MessageHandler, Updater, CommandHandler, ConversationHandler, Filters
from datetime import date

from backend import DB
from buttons import buttons
data = DB()
button = buttons()

STATE_BEGIN = 1
STATE_PHONE = 2
STATE_MESSAGE = 3
STATE_CHECK = 4
STATE_TEXT = 5

 

def start(update: Update, context: CallbackContext):
    data.__init__()
    global name
    context.bot.send_photo(chat_id = update.effective_message.chat_id, photo = open('img/agronews.jpg','rb'), caption = "AgroZamin‚Äç")
    name = update.effective_user.first_name
    update.message.reply_html(f'–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º! –ö–µ–ª–∏–Ω–≥, –∞–≤–≤–∞–ª —Ö–∏–∑–º–∞—Ç –∫—û—Ä—Å–∞—Ç–∏—à —Ç–∏–ª–∏–Ω–∏ —Ç–∞–Ω–ª–∞–± –æ–ª–∞–π–ª–∏–∫.'
                              f'\n\n–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ! –î–∞–≤–∞–π—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∞–µ–º —è–∑—ã–∫ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏—è.  ',
                              reply_markup=button.b_button())
    return STATE_BEGIN

def phone(update:Update, context:CallbackContext):
    b_name = update.message.text
    
    if b_name == button.b1:
        context.chat_data.update({'til':'uz'})
        update.message.reply_html(f'–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ +9989** *** ** **\n—à–∞–∫–ª–¥–∞ —é–±–æ—Ä–∏–Ω–≥, '
                                    f'—ë–∫–∏ "üì± –†–∞“õ–∞–º —é–±–æ—Ä–∏—à"\n—Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥:',
                                    reply_markup=button.t_button_uz())
    elif b_name == button.b2:
        context.chat_data.update({'til':'ru'})
        update.message.reply_html(f"{data.phone_text['ru']}",
                                    reply_markup=button.t_button_ru())
    
    context.chat_data.update({'first_name': update.effective_user.first_name})
    
    return STATE_PHONE
 
def resent_lang(update: Update, context: CallbackContext):
    til = context.chat_data['til']
    update.message.reply_html(f"{data.phone_text[f'{til}']}",reply_markup=button.b_button())


def phone_entity_handler(update: Update, context: CallbackContext):
    pne = list(filter(lambda e: e.type == 'phone_number', update.message.entities))[0]
    phone_number = update.message.text[pne.offset : pne.offset + pne.length]
    context.chat_data.update({'phone_number': phone_number})
    til = context.chat_data['til']
    update.message.reply_html(f"{data.xurmatli[f'{til}']} <b>{update.effective_user.first_name} !</b>\n\n<i>{data.text_message[f'{til}']}</i>\n\n")

    return STATE_MESSAGE

def phone_contact_handler(update: Update, context: CallbackContext):
    phone_number = update.message.contact
    context.chat_data.update({'phone_number': phone_number['phone_number']})
    til = context.chat_data['til']
    update.message.reply_html(f"{data.xurmatli[f'{til}']} <b>{update.effective_user.first_name} !</b>\n\n<i>{data.text_message[f'{til}']}</i>\n\n")

    return STATE_MESSAGE


def phone_resent_handler(update: Update, context: CallbackContext):
    if context.chat_data['til'] == 'uz':
        btn = button.t_button_uz()
    else:
        btn = button.t_button_ru()
    
    update.message.reply_html(f'–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º–∏–Ω–≥–∏–∑–Ω–∏ +9989** *** ** **\n—à–∞–∫–ª–¥–∞ —é–±–æ—Ä–∏–Ω–≥, '
                                  f'—ë–∫–∏ "üì± –†–∞“õ–∞–º —é–±–æ—Ä–∏—à"\n—Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥:',
                                  reply_markup=btn)

def forward(update:Update, context:CallbackContext):
    if update.message.text != '/start':
        msg = (f"üë§ {update.effective_user.full_name}\n"
                f"üì≤ {context.chat_data['phone_number']}\n"
                f"üîó {update.effective_user.link}\n\n"
                f"üí¨ –Æ–±–æ—Ä–∏–ª–≥–∞–Ω “≥–∞–±–∞—Ä  üëáüëá")
        context.bot.send_message(chat_id=314722445, text=msg)
        context.bot.forward_message(
            chat_id=314722445, 
            from_chat_id=update.effective_chat.id, 
            message_id=update.message.message_id
        )        
        update.message.reply_html(
            "ü§ñ  “≤–∞–±–∞—Ä–∏–Ω–≥–∏–∑ –º—É—Ö–±–∏—Ä–≥–∞ –∂—û–Ω–∞—Ç–∏–ª–¥–∏.\n\n‚úçÔ∏è –Ø–Ω–∞ “≥–∞–±–∞—Ä —é–±–æ—Ä–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω ...\n"
            "-------------------------------------------------------------------------------------\n"
            "ü§ñ–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—É.\n\n‚úçÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ..."
        )
        if data.chack_user(chat_id=update.message.chat_id):
            user = data.select_user(chat_id=update.message.chat_id)
        else:
            data.insert_user_db(
                chat_id=update.effective_chat.id, 
                name=update.effective_user.full_name, 
                phone=context.chat_data['phone_number'], 
                link=update.effective_user.link
            )
            user = data.select_user(chat_id=update.message.chat_id)
        data.insert_post_db(text=update.message.text, user_id=user)


def statistics(update:Update, context:CallbackContext):
    context.bot.send_photo(chat_id = update.effective_message.chat_id,
                           photo = open('img/diogramma.jpg','rb'),
                           caption =  (f"Barcha foydalanuvchilar soni: <b>{data.count_users()}</b>\n"
                                      f"Bot ishga tushganiga <b>{(date.today() - date(2022, 9, 28)).days}</b> kun bo'ldi\n"
                                      f"-------------------------------------------------------------------------------------\n"
                                      f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{data.count_users()}</b>\n"
                                      f"–î–Ω–µ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: <b>{(date.today() - date(2022, 9, 28)).days}</b>"),
                           parse_mode="HTML")

def help(update:Update, context:CallbackContext):
    update.message.reply_html("üá∫üáø –£—à–±—É Telegram –±–æ—Ç agrozamin.uz –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à–∏–Ω–≥–∏–∑,"
                                    f"—Ä–∞—Å–º, –≤–∏–¥–µ–æ “≥–∞–º–¥–∞ –∞—É–¥–∏–æ—ë–∑—É–≤–ª–∞—Ä–Ω–∏ ¬´Agrozamin –º—É—Ö–±–∏—Ä–∏¬ª –≥–∞ —é–±–æ—Ä–∏—à–∏–Ω–≥–∏–∑ —É—á—É–Ω —è—Ä–∞—Ç–∏–ª–¥–∏.\n{uz_text}\n"
                                    "-------------------------------------------------------------------------------------\n"
                                "üá∑üá∫ –≠—Ç–æ—Ç Telegram-–±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏"
                                    f"—Å–≤—è–∑–∞—Ç—å—Å—è —Å agrozamin.uz, ‚Äã‚Äã–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ ¬´–ö–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—É –ê–≥—Ä–æ–∑–∞–º–∏–Ω¬ª.\n{ru_text}")


updater = Updater("5794102410:AAFfM6IBWUbaMs0UyFXHcnyPPbxOQKEZ2Eo", use_context=True)
updater.dispatcher.add_handler(CommandHandler('statistics', statistics))
updater.dispatcher.add_handler(CommandHandler('help', help))
conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        STATE_BEGIN:[
            MessageHandler(Filters.text, phone),
            MessageHandler(Filters.all, resent_lang)],
        STATE_PHONE: [
            MessageHandler(Filters.text & Filters.entity(MessageEntity.PHONE_NUMBER), phone_entity_handler),
            MessageHandler(Filters.contact, phone_contact_handler),
            MessageHandler(Filters.all, phone_resent_handler)
        ],
        STATE_MESSAGE:[
            MessageHandler(Filters.all, forward)
        ],
    },
    fallbacks=[]
)

updater.dispatcher.add_handler(conv_handler)
updater.start_polling()
updater.idle()